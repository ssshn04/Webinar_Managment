@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Authorization
@inject NavigationManager navManager
@inject AuthenticationStateProvider AuthStateProvider

<style>
    .mdc-drawer {
        box-shadow: 2px 0px 2px 0px rgba(199, 199, 199, 0.29);
        background-color: #FFF2D7;
    }
</style>

<MatNavMenu Multi="true">
    <MatNavItem Href="@navManager.ToAbsoluteUri("").AbsoluteUri" NavLinkMatch="NavLinkMatch.All">
        <MatIcon Icon="home"></MatIcon>&nbsp; Home
    </MatNavItem>

    <AuthorizeView Roles="Speaker,Participant">
        <Authorized>
            <MatNavItem Href="@navManager.ToAbsoluteUri("webinars").AbsoluteUri">
                All Webinars
            </MatNavItem>
            <MatNavItem Href="@navManager.ToAbsoluteUri("my-webinars").AbsoluteUri">
                My Webinars
            </MatNavItem>
        </Authorized>
    </AuthorizeView>

    <AuthorizeView Roles="Speaker">
        <Authorized>
            <MatNavItem Href="@navManager.ToAbsoluteUri("addwebinar").AbsoluteUri">
                Create Webinar
            </MatNavItem>>
        </Authorized>
    </AuthorizeView>
</MatNavMenu>

@code {
    class NavItem
    {
        public NavGroup Group;
        public string Name;
        public string Url;
        public int Order;
    }

    class NavGroup
    {
        public string Name;
        public int Order;

        public NavGroup(string name, int order = int.MaxValue)
        {
            Name = name;
            Order = order;
        }
    }

    class NavGroupModel
    {
        public NavGroup Group;
        public NavItem[] items;
    }

    NavGroupModel[] model;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var groups = new
        {
            Webinars = new NavGroup("Webinars", 1)
        };

        var navItems = new[]
        {
            new NavItem()
            {
                Name = "Create Webinar",
                Url = "addwebinar",
                Group = groups.Webinars,
                Order = 1
            },
            new NavItem()
            {
                Name = "All Webinars",
                Url = "webinars",
                Group = groups.Webinars,
                Order = 2
            },
            new NavItem()
            {
                Name = "My Webinars",
                Url = "my-webinars",
                Group = groups.Webinars,
                Order = 3
            }
        };
        model = navItems
            .GroupBy(x => x.Group)
            .OrderBy(x => x.Key.Order)
            .ThenBy(x => x.Key.Name)
            .Select(x =>
            {
                return new NavGroupModel()
                    {
                        Group = x.Key,
                        items = x.OrderBy(x => x.Order)
                                .ThenBy(x => x.Name)
                                .ToArray()
                    };

            }).ToArray();
    }
}
